// Backgrounds
@each $color, $value in map-merge($theme-colors, ("white": $white)) {
    .bg-#{$color} {
        @include context-bg($value);
    }
}

.bg-cover {
    background-size: cover !important; // stylelint-disable-line declaration-no-important
}

.bg-contain {
    background-size: contain !important; // stylelint-disable-line declaration-no-important
}

.bg-auto {
    background-size: auto !important; // stylelint-disable-line declaration-no-important
}

.bg-scroll {
    background-attachment: scroll !important; // stylelint-disable-line declaration-no-important
}

.bg-repeat {
    background-repeat: repeat !important; // stylelint-disable-line declaration-no-important
}

.bg-white {
    @include theme() { color: theme-get('gray-800'); }
    @include theme() { background-color: theme-get('white-important'); }
}

// Heights
@each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @include media-breakpoint-up($breakpoint) {
        @each $size, $height in $heights {
            .mh#{$infix}-#{$size} {
                min-height: map-get($height, $breakpoint) !important; // stylelint-disable-line declaration-no-important

                $bp: breakpoint-next($breakpoint);
                @while $bp != null {
                    @include media-breakpoint-up($bp) {
                        min-height: map-get($height, $bp) !important; // stylelint-disable-line declaration-no-important
                    }
                    $bp: breakpoint-next($bp);
                }
            }
        }
    }
}

// Sticky elements
.sticky-element {
    display: inline-block; // Fix sticky-container height miscalculation and resulting shaking

    p:empty {
        margin-bottom: 0; // remove margin of empty paragraph for correct height detection
    }
}

.sticky-element.is-sticky {
    z-index: $zindex-sticky !important; // stylelint-disable-line declaration-no-important
}

// Proportional Boxes
[class^="prop-"] {
    position: relative;
    width: 100% !important; // stylelint-disable-line declaration-no-important
    height: 0 !important; // stylelint-disable-line declaration-no-important
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint);
    $next: breakpoint-next($breakpoint);

    @include media-breakpoint-up($breakpoint) {
        @each $i in 1, 2, 3 {
            @each $j in 1, 2, 3 {
                .prop#{$infix}-#{$i}-#{$j} {
                    padding-bottom: percentage($j / $i);
                }
            }
        }
    }
}
